<?php

/**
 * @file
 * All updates.
 */

/**
 * Revert config_permissions.
 */
function mal_update_update_7000() {
  $features = array(
    'config_permissions',
  );

  features_revert($features);
  node_access_needs_rebuild(FALSE);
}

/**
 * Enable search_api_autocomplete and revert config_facet.
 */
function mal_update_update_7001() {
  module_enable('search_api_autocomplete');

  $features = array(
    'config_facet',
  );

  features_revert($features);
  node_access_needs_rebuild(FALSE);
}

/**
 * Enable features with Language settings, rules settings, some contrib modules.
 */
function mal_update_update_7003() {
  module_enable('rules');
  module_enable('rules_admin');
  module_enable('notification_rules');

  module_enable('config_language');
  module_enable('l10n_update');
  module_enable('language_cookie');

  module_enable('mal_ctools_front_page_allowed_content');
  module_enable('mal_course_administrative');
  module_enable('view_subscribed_app_view');

  drush_invoke('drush_l10n_update', array());
  exec("drush fra -y", $output);
}

/**
 * Enable features with Language settings, rules settings, some contrib modules.
 */
function mal_update_update_7004() {
  $features = array(
    'config_wysiwyg',
    'config_facet',
  );

  features_revert($features);
}

/**
 * Enable hints module.
 */
function mal_update_update_7005() {
  module_enable('mal_hint');
}

/**
 * Save image and set it into the banner.
 */
function mal_update_update_7006() {
  $image_name = 'oppet_hus3.jpg';
  $image_path = DRUPAL_ROOT . '/' . drupal_get_path('profile', 'mal') . '/files/' . $image_name;
  $image_data = file_get_contents($image_path);
  if ($file = file_save_data($image_data, 'public://' . $image_name, FILE_EXISTS_REPLACE)) {
    variable_set('page_main_layout_banner_image_fid', $file->fid);
  }

  $features = array(
    'page_main_layout',
  );
  features_revert($features);
}

/**
 * Increase tooltip trigger bound for descriptions.
 */
function mal_update_update_7007() {
  if ($settings = variable_get('theme_city_of_malmo_settings', FALSE)) {
    $settings['bootstrap_tooltip_descriptions_length'] = 400;
    variable_set('theme_city_of_malmo_settings', $settings);
  }
}

/**
 * Enable subtitle pane module.
 */
function mal_update_update_7008() {
  module_enable('mal_ctools_subtitle');
  module_enable('view_sidebar_courses');
  $features = array(
    'page_main_layout',
  );

  features_revert($features);
}

/**
 * Enable searchable feature.
 */
function mal_update_update_7009() {
  module_enable('mal_course_scheduler');
  module_enable('mal_course_searchable_type_formatter');

  $features = array(
    'config_facet',
    'config_search',
    'config_taxonomy',
    'content_type_course',
    'content_type_course_packages',
    'page_main_layout',
    'page_search',
  );

  features_revert($features);
}

/**
 * Revert breadcrumbs.
 */
function mal_update_update_7011() {
  $features = array(
    'config_breadrumbs',
  );

  features_revert($features);
}

/**
 * Enable UI improvement modules.
 */
function mal_update_update_7012() {
  module_enable(array(
    'better_formats',
    'publish_button',
    'chosen',
    'node_edit_protection',
    'navbar',
    'hide_formats',
  ));

  theme_enable(array('ember'));
}

/**
 * Switch from Admin menu module to Navbar.
 */
function mal_update_update_7013() {
  module_disable(array('admin_menu'));
  module_enable(array('navbar'));
}

/**
 * Enable Override node options module.
 */
function mal_update_update_7014() {
  module_enable(array('override_node_options'));
}

/**
 * Add cache configuration.
 */
function mal_update_update_7015() {
  // Add hash salt and database settings as long as function below is designed
  // for one-time usage and will skip this important settings.
  $settings = array(
    'databases' => array(
      'value' => $GLOBALS['databases'],
      'required' => TRUE,
    ),
    'drupal_hash_salt' => array(
      'value' => $GLOBALS['drupal_hash_salt'],
      'required' => TRUE,
    ),
    'cache_backends' => array(
      'value' => array(
        drupal_get_path('module', 'memcache') . '/memcache.inc',
        drupal_get_path('module', 'memcache') . '/varnish.cache.inc',
      ),
      'required' => TRUE,
    ),
    'cache_default_class' => array(
      'value' => 'MemCacheDrupal',
      'required' => TRUE,
    ),
    'cache_class_cache_form' => array(
      'value' => 'DrupalDatabaseCache',
      'required' => TRUE,
    ),
    'cache_class_cache_page' => array(
      'value' => 'VarnishCache',
      'required' => TRUE,
    ),
    'page_cache_invoke_hooks' => array(
      'value' => FALSE,
      'required' => TRUE,
    ),
  );
  drupal_rewrite_settings($settings);
}

/**
 * Add usage for banner image.
 */
function mal_update_update_7016() {
  if ($file = file_load(variable_get('page_main_layout_banner_image_fid'))) {
    file_usage_add($file, 'file', 'user', 1);
  }
}

/**
 * Update cache configuration.
 */
function mal_update_update_7018() {
  // Add hash salt and database settings as long as function below is designed
  // for one-time usage and will skip this important settings.
  $settings = array(
    'databases' => array(
      'value' => $GLOBALS['databases'],
      'required' => TRUE,
    ),
    'drupal_hash_salt' => array(
      'value' => $GLOBALS['drupal_hash_salt'],
      'required' => TRUE,
    ),
    "conf['cache_backends']" => array(
      'value' => array(
        drupal_get_path('module', 'memcache') . '/memcache.inc',
        drupal_get_path('module', 'varnish') . '/varnish.cache.inc',
      ),
      'required' => TRUE,
    ),
    "conf['cache_default_class']" => array(
      'value' => 'MemCacheDrupal',
      'required' => TRUE,
    ),
    "conf['cache_class_cache_form']" => array(
      'value' => 'DrupalDatabaseCache',
      'required' => TRUE,
    ),
    "conf['cache_class_cache_page']" => array(
      'value' => 'VarnishCache',
      'required' => TRUE,
    ),
    "conf['page_cache_invoke_hooks']" => array(
      'value' => FALSE,
      'required' => TRUE,
    ),
  );
  drupal_rewrite_settings($settings);
}
